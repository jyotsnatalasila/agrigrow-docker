import React, { useState, useEffect } from 'react';
import { MdLocationOn } from 'react-icons/md';
import { FaSearch, FaShoppingCart, FaBell, FaUser, FaCalculator, FaSun, FaMoon, FaHeart } from 'react-icons/fa';
import { useLocationContext } from './LocationProvider';
import { useTranslation } from 'react-i18next';
import i18n from 'i18next';
import { useNavigate } from 'react-router-dom';

const languages = [
  { code: 'en', label: 'English' },
  { code: 'hi', label: 'Hindi' },
  { code: 'te', label: 'Telugu' },
  { code: 'ta', label: 'Tamil' },
  { code: 'kn', label: 'Kannada' },
  { code: 'ml', label: 'Malayalam' },
  { code: 'bn', label: 'Bengali' },
  { code: 'pa', label: 'Punjabi' },
  { code: 'gu', label: 'Gujarati' },
  { code: 'fr', label: 'French' },
  { code: 'es', label: 'Spanish' },
];

function CustomTranslateDropdown({ selectedLang, onChangeLanguage }) {
  return (
    <>
      <style>{`.custom-select { width: 140px; padding: 6px 30px 6px 8px; border-radius: 6px; border: 1px solid #ccc; font-size: 14px; font-weight: bold; cursor: pointer; appearance: none; background: white url("data:image/svg+xml;utf8,<svg fill='black' height='14' viewBox='0 0 24 24' width='14' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/></svg>") no-repeat right 8px center; }`}</style>
      <select id="language-select" className="custom-select" value={selectedLang} onChange={onChangeLanguage} aria-label="Select language">
        {languages.map(l => <option key={l.code} value={l.code}>{l.label}</option>)}
      </select>
    </>
  );
}

function CategoryBar() {
  // Minimal placeholder to preserve layout and theme
  return <div style={{ height: 40, marginTop: 90 }} aria-hidden />;
}

export default function Navbar() {
  const navigate = useNavigate();
  const { t } = useTranslation();

  const {
    deliveryStatus,
    darkTheme,
    toggleTheme,
    handleLocationClick,
    showCalculator,
    handleCalculatorToggle,
    cartItems,
    wishlistItems,
    removeFromWishlistGlobal,
    addToWishlistGlobal,
    addToCartGlobal,
    notifications,
    addNotification,
    markNotificationRead,
    orders,
    user,
  } = useLocationContext();

  const [selectedLang, setSelectedLang] = useState('en');
  useEffect(() => {
    try {
      const stored = localStorage.getItem('agrigrowLang');
      if (stored) { setSelectedLang(stored); i18n.changeLanguage(stored); }
    } catch (e) {}
  }, []);

  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState([]);
  const [showWishlist, setShowWishlist] = useState(false);
  const [showNotifications, setShowNotifications] = useState(false);

  const searchIndex = [
    { name: 'Home', path: '/' },
    { name: 'Rice', path: '/rice' },
    { name: 'Corn', path: '/corn' },
    { name: 'Spices', path: '/spices' },
    { name: 'Pulses', path: '/pulses' },
    { name: 'Indoor Plants', path: '/indoorplants' },
    { name: 'Sapplings', path: '/sapplings' },
    { name: 'Cart', path: '/cart' },
    { name: 'Vegetables', path: '/vegetables' },
    { name: 'Lotus', path: '/lotus' },
    { name: 'Best Sellers', path: '/bestsellers' },
    { name: "Today's Deals", path: '/todaydeals' },
    { name: 'Wishlist', path: '/wishlist' },
    { name: 'Fruits', path: '/fruits' },
    { name: 'Flowers', path: '/flowers' },
  ];

  useEffect(() => {
    if (!searchQuery) return setSearchResults([]);
    const q = searchQuery.toLowerCase();
    const results = searchIndex.filter(item => item.name.toLowerCase().includes(q));
    setSearchResults(results.slice(0, 8));
  }, [searchQuery]);

  const doSearch = (item) => { if (!item) return; setSearchQuery(''); setSearchResults([]); navigate(item.path); };
  const onChangeLanguage = (e) => { const lang = e.target ? e.target.value : e; setSelectedLang(lang); try { i18n.changeLanguage(lang); localStorage.setItem('agrigrowLang', lang); } catch (err) {} };
  const totalUniqueItems = cartItems.length;

  return (
    <>
      <nav className="navbar" style={{ background: darkTheme ? 'linear-gradient(to right,#222,#444)' : 'linear-gradient(to right,#2f6920,#a8e063)', height: 90, display: 'flex', alignItems: 'center', padding: '0 24px', position: 'fixed', top: 0, left: 0, right: 0, zIndex: 1000 }}>
        <div style={{ display: 'flex', alignItems: 'center', gap: 18, width: '100%' }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>
            <a href="/" aria-label="Home"><img src="/Images/agrigrowlogo.png" alt="logo" style={{ height: 55 }} /></a>
            <div onClick={handleLocationClick} style={{ display: 'flex', alignItems: 'center', gap: 8, cursor: 'pointer' }} title={t('navbar.selectLocation') || 'Select Location'}>
              <MdLocationOn size={28} style={{ color: '#fff' }} />
              <span style={{ color: '#fff', fontWeight: '700' }}>{deliveryStatus}</span>
            </div>
          </div>

          <div style={{ flex: 1, display: 'flex', justifyContent: 'center', gap: 12, alignItems: 'center' }}>
            <button onClick={toggleTheme} style={{ background: 'transparent', border: 'none', color: '#fff', cursor: 'pointer' }} title={darkTheme ? t('navbar.lightTheme') : t('navbar.darkTheme')}>
              {darkTheme ? <FaSun /> : <FaMoon />}
            </button>
            <button onClick={handleCalculatorToggle} style={{ background: 'transparent', border: 'none', color: '#fff', cursor: 'pointer' }} title={t('navbar.currencyConverter')}><FaCalculator /></button>

            <div style={{ position: 'relative' }}>
              <input value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} placeholder={t('navbar.searchPlaceholder')} style={{ padding: '8px 10px', borderRadius: 6, border: '1px solid #ccc', minWidth: 280 }} />
              <button onClick={() => { if (searchResults.length) doSearch(searchResults[0]); }} style={{ marginLeft: 8, padding: '8px 10px', background: '#56ab2f', color: '#fff', border: 'none', borderRadius: 6 }} title="Search"><FaSearch /></button>
              {searchResults.length > 0 && (
                <div style={{ position: 'absolute', top: '42px', left: 0, background: '#fff', borderRadius: 8, boxShadow: '0 8px 24px rgba(0,0,0,0.12)', overflow: 'hidden', zIndex: 2000 }}>
                  {searchResults.map(r => (
                    <div key={r.path} onClick={() => doSearch(r)} style={{ padding: 10, cursor: 'pointer', borderBottom: '1px solid #eee' }}>{r.name}</div>
                  ))}
                </div>
              )}
            </div>

            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
              <label style={{ color: '#fff', fontWeight: '700' }}>{t('navbar.language')}</label>
              <CustomTranslateDropdown selectedLang={selectedLang} onChangeLanguage={onChangeLanguage} />
            </div>
          </div>

          <div style={{ display: 'flex', alignItems: 'center', gap: 18 }}>
            <a href="/orders" style={{ color: '#fff', fontWeight: '700', textDecoration: 'none' }}>{t('navbar.returnsOrders')}</a>

            <a href="/cart" title={t('navbar.viewCart')} style={{ position: 'relative', color: '#fff' }}>
              <FaShoppingCart size={20} />
              {totalUniqueItems > 0 && <span style={{ position: 'absolute', top: -8, right: -8, background: '#ff4d4d', color: '#fff', borderRadius: '50%', width: 20, height: 20, display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: 12 }}>{totalUniqueItems}</span>}
            </a>

            <div style={{ position: 'relative' }}>
              <button onClick={() => setShowNotifications(s => !s)} title={t('navbar.notifications')} style={{ background: 'transparent', border: 'none', color: '#fff', cursor: 'pointer' }}>
                <FaBell />{notifications && notifications.filter(n => !n.read).length > 0 && <span style={{ marginLeft: 6, background: '#ff4d4d', color: '#fff', borderRadius: '50%', padding: '2px 6px', fontSize: 12 }}>{notifications.filter(n => !n.read).length}</span>}
              </button>
              {showNotifications && (
                <div style={{ position: 'absolute', right: 0, top: 36, width: 320, background: '#fff', color: '#000', borderRadius: 8, boxShadow: '0 8px 24px rgba(0,0,0,0.12)', zIndex: 3000 }}>
                  <div style={{ padding: 12, borderBottom: '1px solid #eee', fontWeight: 700 }}>Notifications</div>
                  {notifications && notifications.length > 0 ? notifications.map(n => (
                    <div key={n.id} style={{ padding: 10, borderBottom: '1px solid #f2f2f2', display: 'flex', justifyContent: 'space-between', gap: 8 }}>
                      <div>
                        <div style={{ fontWeight: 700 }}>{n.title}</div>
                        <div style={{ fontSize: 13 }}>{n.body}</div>
                      </div>
                      <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>
                        {!n.read && <button onClick={() => markNotificationRead(n.id)} style={{ background: '#26a65b', color: '#fff', border: 'none', borderRadius: 6, padding: '6px 8px', cursor: 'pointer' }}>Mark</button>}
                      </div>
                    </div>
                  )) : <div style={{ padding: 12 }}>No notifications</div>}
                </div>
              )}
            </div>

            <div style={{ position: 'relative' }}>
              <button onClick={() => setShowWishlist(s => !s)} title="Wishlist" style={{ background: 'transparent', border: 'none', color: '#fff', cursor: 'pointer' }}>
                <FaHeart />{wishlistItems && wishlistItems.length > 0 && <span style={{ marginLeft: 6, background: '#8dc63f', color: '#000', borderRadius: '50%', padding: '2px 6px', fontSize: 12 }}>{wishlistItems.length}</span>}
              </button>
              {showWishlist && (
                <div style={{ position: 'absolute', right: 0, top: 36, width: 340, background: '#fff', color: '#000', borderRadius: 8, boxShadow: '0 8px 24px rgba(0,0,0,0.12)', zIndex: 3000 }}>
                  <div style={{ padding: 12, borderBottom: '1px solid #eee', fontWeight: 700, display: 'flex', justifyContent: 'space-between' }}>Wishlist <span style={{ background: '#2f6920', color: '#fff', borderRadius: '999px', padding: '2px 8px' }}>{wishlistItems.length}</span></div>
                  <div style={{ maxHeight: 300, overflowY: 'auto' }}>
                    {wishlistItems.length === 0 && <div style={{ padding: 16 }}>No items in wishlist</div>}
                    {wishlistItems.map(it => (
                      <div key={it.id} style={{ display: 'flex', alignItems: 'center', gap: 12, padding: 12, borderBottom: '1px solid #f2f2f2' }}>
                        <img src={it.image || '/Images/1000petals.webp'} alt={it.name} style={{ width: 56, height: 56, objectFit: 'cover', borderRadius: 8 }} />
                        <div style={{ flex: 1 }}>
                          <div style={{ fontWeight: 700 }}>{it.name}</div>
                          <div style={{ color: '#666' }}>{it.unit || ''} • ₹{it.itemPrice || ''}</div>
                        </div>
                        <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>
                          <button onClick={() => { addToCartGlobal({ id: it.id, name: it.name, itemPrice: it.itemPrice || 0, quantity: 1, totalPrice: (it.itemPrice || 0) }); removeFromWishlistGlobal(it.id); }} style={{ background: '#269627', color: '#fff', border: 'none', padding: '6px 8px', borderRadius: 6 }}>Add</button>
                          <button onClick={() => removeFromWishlistGlobal(it.id)} style={{ background: '#ff4d4d', color: '#fff', border: 'none', padding: '6px 8px', borderRadius: 6 }}>Remove</button>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>

            <div>
              <button title="Account" onClick={() => navigate('/profile')} style={{ background: 'transparent', border: 'none', color: '#fff', cursor: 'pointer' }}>
                <FaUser /> {user?.name ? <span style={{ marginLeft: 8 }}>{user.name}</span> : null}
              </button>
            </div>
          </div>
        </div>
      </nav>

      <CategoryBar />
    </>
  );
}
